
DIO_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002ca  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000031e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000031e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000350  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  0000038c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000080c  00000000  00000000  000003dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000060d  00000000  00000000  00000be8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002ab  00000000  00000000  000011f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000068  00000000  00000000  000014a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000370  00000000  00000000  00001508  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000243  00000000  00000000  00001878  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001abb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 47 01 	call	0x28e	; 0x28e <main>
  64:	0c 94 63 01 	jmp	0x2c6	; 0x2c6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_set_PinValue>:
 */ 

#include "DIO_interface.h"
#include "DIO_private.h"
void  DIO_set_PinValue (u8 port , u8 pin_num , u8 value){
	 if (value == HIGH){
  6c:	41 30       	cpi	r20, 0x01	; 1
  6e:	a1 f5       	brne	.+104    	; 0xd8 <DIO_set_PinValue+0x6c>
		 
		 switch (port){
  70:	81 30       	cpi	r24, 0x01	; 1
  72:	89 f0       	breq	.+34     	; 0x96 <DIO_set_PinValue+0x2a>
  74:	28 f0       	brcs	.+10     	; 0x80 <DIO_set_PinValue+0x14>
  76:	82 30       	cpi	r24, 0x02	; 2
  78:	c9 f0       	breq	.+50     	; 0xac <DIO_set_PinValue+0x40>
  7a:	83 30       	cpi	r24, 0x03	; 3
  7c:	11 f1       	breq	.+68     	; 0xc2 <DIO_set_PinValue+0x56>
  7e:	08 95       	ret
		  case port_A : SET_BIT(PORTA,pin_num);break;
  80:	2b b3       	in	r18, 0x1b	; 27
  82:	81 e0       	ldi	r24, 0x01	; 1
  84:	90 e0       	ldi	r25, 0x00	; 0
  86:	02 c0       	rjmp	.+4      	; 0x8c <DIO_set_PinValue+0x20>
  88:	88 0f       	add	r24, r24
  8a:	99 1f       	adc	r25, r25
  8c:	6a 95       	dec	r22
  8e:	e2 f7       	brpl	.-8      	; 0x88 <DIO_set_PinValue+0x1c>
  90:	82 2b       	or	r24, r18
  92:	8b bb       	out	0x1b, r24	; 27
  94:	08 95       	ret
		  case port_B : SET_BIT(PORTB,pin_num);break;
  96:	28 b3       	in	r18, 0x18	; 24
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <DIO_set_PinValue+0x36>
  9e:	88 0f       	add	r24, r24
  a0:	99 1f       	adc	r25, r25
  a2:	6a 95       	dec	r22
  a4:	e2 f7       	brpl	.-8      	; 0x9e <DIO_set_PinValue+0x32>
  a6:	82 2b       	or	r24, r18
  a8:	88 bb       	out	0x18, r24	; 24
  aa:	08 95       	ret
		  case port_C : SET_BIT(PORTC,pin_num);break;
  ac:	25 b3       	in	r18, 0x15	; 21
  ae:	81 e0       	ldi	r24, 0x01	; 1
  b0:	90 e0       	ldi	r25, 0x00	; 0
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <DIO_set_PinValue+0x4c>
  b4:	88 0f       	add	r24, r24
  b6:	99 1f       	adc	r25, r25
  b8:	6a 95       	dec	r22
  ba:	e2 f7       	brpl	.-8      	; 0xb4 <DIO_set_PinValue+0x48>
  bc:	82 2b       	or	r24, r18
  be:	85 bb       	out	0x15, r24	; 21
  c0:	08 95       	ret
		  case port_D : SET_BIT(PORTD,pin_num);break;
  c2:	22 b3       	in	r18, 0x12	; 18
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <DIO_set_PinValue+0x62>
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	6a 95       	dec	r22
  d0:	e2 f7       	brpl	.-8      	; 0xca <DIO_set_PinValue+0x5e>
  d2:	82 2b       	or	r24, r18
  d4:	82 bb       	out	0x12, r24	; 18
  d6:	08 95       	ret
		 }
	 }else if (value == LOW){
  d8:	41 11       	cpse	r20, r1
  da:	37 c0       	rjmp	.+110    	; 0x14a <DIO_set_PinValue+0xde>

		  
		  switch (port){
  dc:	81 30       	cpi	r24, 0x01	; 1
  de:	91 f0       	breq	.+36     	; 0x104 <DIO_set_PinValue+0x98>
  e0:	28 f0       	brcs	.+10     	; 0xec <DIO_set_PinValue+0x80>
  e2:	82 30       	cpi	r24, 0x02	; 2
  e4:	d9 f0       	breq	.+54     	; 0x11c <DIO_set_PinValue+0xb0>
  e6:	83 30       	cpi	r24, 0x03	; 3
  e8:	29 f1       	breq	.+74     	; 0x134 <DIO_set_PinValue+0xc8>
  ea:	08 95       	ret
			  case port_A : CLR_BIT(PORTA,pin_num);break;
  ec:	2b b3       	in	r18, 0x1b	; 27
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	02 c0       	rjmp	.+4      	; 0xf8 <DIO_set_PinValue+0x8c>
  f4:	88 0f       	add	r24, r24
  f6:	99 1f       	adc	r25, r25
  f8:	6a 95       	dec	r22
  fa:	e2 f7       	brpl	.-8      	; 0xf4 <DIO_set_PinValue+0x88>
  fc:	80 95       	com	r24
  fe:	82 23       	and	r24, r18
 100:	8b bb       	out	0x1b, r24	; 27
 102:	08 95       	ret
			   case port_B : CLR_BIT(PORTB,pin_num);break;
 104:	28 b3       	in	r18, 0x18	; 24
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_set_PinValue+0xa4>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_set_PinValue+0xa0>
 114:	80 95       	com	r24
 116:	82 23       	and	r24, r18
 118:	88 bb       	out	0x18, r24	; 24
 11a:	08 95       	ret
			    case port_C : CLR_BIT(PORTC,pin_num);break;
 11c:	25 b3       	in	r18, 0x15	; 21
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	02 c0       	rjmp	.+4      	; 0x128 <DIO_set_PinValue+0xbc>
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	6a 95       	dec	r22
 12a:	e2 f7       	brpl	.-8      	; 0x124 <DIO_set_PinValue+0xb8>
 12c:	80 95       	com	r24
 12e:	82 23       	and	r24, r18
 130:	85 bb       	out	0x15, r24	; 21
 132:	08 95       	ret
				 case port_D : CLR_BIT(PORTD,pin_num);break;
 134:	22 b3       	in	r18, 0x12	; 18
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	02 c0       	rjmp	.+4      	; 0x140 <DIO_set_PinValue+0xd4>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	6a 95       	dec	r22
 142:	e2 f7       	brpl	.-8      	; 0x13c <DIO_set_PinValue+0xd0>
 144:	80 95       	com	r24
 146:	82 23       	and	r24, r18
 148:	82 bb       	out	0x12, r24	; 18
 14a:	08 95       	ret

0000014c <DIO_set_direction>:
	 }
	 
	
}
void  DIO_set_direction (u8 port , u8 pin_num , u8 direction){
 if (direction == output){
 14c:	41 30       	cpi	r20, 0x01	; 1
 14e:	b1 f5       	brne	.+108    	; 0x1bc <DIO_set_direction+0x70>
	 
	 switch (port){
 150:	81 30       	cpi	r24, 0x01	; 1
 152:	89 f0       	breq	.+34     	; 0x176 <DIO_set_direction+0x2a>
 154:	28 f0       	brcs	.+10     	; 0x160 <DIO_set_direction+0x14>
 156:	82 30       	cpi	r24, 0x02	; 2
 158:	c9 f0       	breq	.+50     	; 0x18c <DIO_set_direction+0x40>
 15a:	83 30       	cpi	r24, 0x03	; 3
 15c:	11 f1       	breq	.+68     	; 0x1a2 <DIO_set_direction+0x56>
 15e:	08 95       	ret
		 case port_A : SET_BIT(DDRA,pin_num);break;
 160:	2a b3       	in	r18, 0x1a	; 26
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	02 c0       	rjmp	.+4      	; 0x16c <DIO_set_direction+0x20>
 168:	88 0f       	add	r24, r24
 16a:	99 1f       	adc	r25, r25
 16c:	6a 95       	dec	r22
 16e:	e2 f7       	brpl	.-8      	; 0x168 <DIO_set_direction+0x1c>
 170:	82 2b       	or	r24, r18
 172:	8a bb       	out	0x1a, r24	; 26
 174:	08 95       	ret
		 case port_B : SET_BIT(DDRB,pin_num);break;
 176:	27 b3       	in	r18, 0x17	; 23
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	02 c0       	rjmp	.+4      	; 0x182 <DIO_set_direction+0x36>
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	6a 95       	dec	r22
 184:	e2 f7       	brpl	.-8      	; 0x17e <DIO_set_direction+0x32>
 186:	82 2b       	or	r24, r18
 188:	87 bb       	out	0x17, r24	; 23
 18a:	08 95       	ret
		 case port_C : SET_BIT(DDRC,pin_num);break;
 18c:	24 b3       	in	r18, 0x14	; 20
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	02 c0       	rjmp	.+4      	; 0x198 <DIO_set_direction+0x4c>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	6a 95       	dec	r22
 19a:	e2 f7       	brpl	.-8      	; 0x194 <DIO_set_direction+0x48>
 19c:	82 2b       	or	r24, r18
 19e:	84 bb       	out	0x14, r24	; 20
 1a0:	08 95       	ret
		 case port_D : SET_BIT(DDRD,pin_num);break;
 1a2:	e1 e1       	ldi	r30, 0x11	; 17
 1a4:	f3 e0       	ldi	r31, 0x03	; 3
 1a6:	20 81       	ld	r18, Z
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	02 c0       	rjmp	.+4      	; 0x1b2 <DIO_set_direction+0x66>
 1ae:	88 0f       	add	r24, r24
 1b0:	99 1f       	adc	r25, r25
 1b2:	6a 95       	dec	r22
 1b4:	e2 f7       	brpl	.-8      	; 0x1ae <DIO_set_direction+0x62>
 1b6:	82 2b       	or	r24, r18
 1b8:	80 83       	st	Z, r24
 1ba:	08 95       	ret
	 }
	 }else if (direction == input){
 1bc:	41 11       	cpse	r20, r1
 1be:	39 c0       	rjmp	.+114    	; 0x232 <DIO_set_direction+0xe6>

	 
	 switch (port){
 1c0:	81 30       	cpi	r24, 0x01	; 1
 1c2:	91 f0       	breq	.+36     	; 0x1e8 <DIO_set_direction+0x9c>
 1c4:	28 f0       	brcs	.+10     	; 0x1d0 <DIO_set_direction+0x84>
 1c6:	82 30       	cpi	r24, 0x02	; 2
 1c8:	d9 f0       	breq	.+54     	; 0x200 <DIO_set_direction+0xb4>
 1ca:	83 30       	cpi	r24, 0x03	; 3
 1cc:	29 f1       	breq	.+74     	; 0x218 <DIO_set_direction+0xcc>
 1ce:	08 95       	ret
		 case port_A : CLR_BIT(DDRA,pin_num);break;
 1d0:	2a b3       	in	r18, 0x1a	; 26
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <DIO_set_direction+0x90>
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	6a 95       	dec	r22
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <DIO_set_direction+0x8c>
 1e0:	80 95       	com	r24
 1e2:	82 23       	and	r24, r18
 1e4:	8a bb       	out	0x1a, r24	; 26
 1e6:	08 95       	ret
		 case port_B : CLR_BIT(DDRB,pin_num);break;
 1e8:	27 b3       	in	r18, 0x17	; 23
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <DIO_set_direction+0xa8>
 1f0:	88 0f       	add	r24, r24
 1f2:	99 1f       	adc	r25, r25
 1f4:	6a 95       	dec	r22
 1f6:	e2 f7       	brpl	.-8      	; 0x1f0 <DIO_set_direction+0xa4>
 1f8:	80 95       	com	r24
 1fa:	82 23       	and	r24, r18
 1fc:	87 bb       	out	0x17, r24	; 23
 1fe:	08 95       	ret
		 case port_C : CLR_BIT(DDRC,pin_num);break;
 200:	24 b3       	in	r18, 0x14	; 20
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_set_direction+0xc0>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_set_direction+0xbc>
 210:	80 95       	com	r24
 212:	82 23       	and	r24, r18
 214:	84 bb       	out	0x14, r24	; 20
 216:	08 95       	ret
		 case port_D : CLR_BIT(DDRD,pin_num);break;
 218:	e1 e1       	ldi	r30, 0x11	; 17
 21a:	f3 e0       	ldi	r31, 0x03	; 3
 21c:	20 81       	ld	r18, Z
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	02 c0       	rjmp	.+4      	; 0x228 <DIO_set_direction+0xdc>
 224:	88 0f       	add	r24, r24
 226:	99 1f       	adc	r25, r25
 228:	6a 95       	dec	r22
 22a:	e2 f7       	brpl	.-8      	; 0x224 <DIO_set_direction+0xd8>
 22c:	80 95       	com	r24
 22e:	82 23       	and	r24, r18
 230:	80 83       	st	Z, r24
 232:	08 95       	ret

00000234 <DIO_GETpinValue>:
	
}

u8    DIO_GETpinValue (u8 port , u8 pin_num){
	
	switch (port){
 234:	81 30       	cpi	r24, 0x01	; 1
 236:	79 f0       	breq	.+30     	; 0x256 <DIO_GETpinValue+0x22>
 238:	28 f0       	brcs	.+10     	; 0x244 <DIO_GETpinValue+0x10>
 23a:	82 30       	cpi	r24, 0x02	; 2
 23c:	a9 f0       	breq	.+42     	; 0x268 <DIO_GETpinValue+0x34>
 23e:	83 30       	cpi	r24, 0x03	; 3
 240:	e1 f0       	breq	.+56     	; 0x27a <DIO_GETpinValue+0x46>
 242:	24 c0       	rjmp	.+72     	; 0x28c <DIO_GETpinValue+0x58>
     case port_A : return GET_BIT(PINA,pin_num);break;
 244:	89 b3       	in	r24, 0x19	; 25
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_GETpinValue+0x1a>
 24a:	95 95       	asr	r25
 24c:	87 95       	ror	r24
 24e:	6a 95       	dec	r22
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_GETpinValue+0x16>
 252:	81 70       	andi	r24, 0x01	; 1
 254:	08 95       	ret
	 case port_B : return GET_BIT(PINB,pin_num);break;
 256:	86 b3       	in	r24, 0x16	; 22
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	02 c0       	rjmp	.+4      	; 0x260 <DIO_GETpinValue+0x2c>
 25c:	95 95       	asr	r25
 25e:	87 95       	ror	r24
 260:	6a 95       	dec	r22
 262:	e2 f7       	brpl	.-8      	; 0x25c <DIO_GETpinValue+0x28>
 264:	81 70       	andi	r24, 0x01	; 1
 266:	08 95       	ret
	 case port_C : return GET_BIT(PINC,pin_num);break;
 268:	83 b3       	in	r24, 0x13	; 19
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 c0       	rjmp	.+4      	; 0x272 <DIO_GETpinValue+0x3e>
 26e:	95 95       	asr	r25
 270:	87 95       	ror	r24
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <DIO_GETpinValue+0x3a>
 276:	81 70       	andi	r24, 0x01	; 1
 278:	08 95       	ret
	 case port_D : return GET_BIT(PIND,pin_num);break;
 27a:	80 b3       	in	r24, 0x10	; 16
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	02 c0       	rjmp	.+4      	; 0x284 <DIO_GETpinValue+0x50>
 280:	95 95       	asr	r25
 282:	87 95       	ror	r24
 284:	6a 95       	dec	r22
 286:	e2 f7       	brpl	.-8      	; 0x280 <DIO_GETpinValue+0x4c>
 288:	81 70       	andi	r24, 0x01	; 1
 28a:	08 95       	ret
	}
 28c:	08 95       	ret

0000028e <main>:
#include "DIO_interface.h"
#include <util/delay.h>

int main(void)
{
	DIO_set_direction(port_A,1,output);
 28e:	41 e0       	ldi	r20, 0x01	; 1
 290:	61 e0       	ldi	r22, 0x01	; 1
 292:	80 e0       	ldi	r24, 0x00	; 0
 294:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_set_direction>
	DIO_set_direction(port_B,1,input);
 298:	40 e0       	ldi	r20, 0x00	; 0
 29a:	61 e0       	ldi	r22, 0x01	; 1
 29c:	81 e0       	ldi	r24, 0x01	; 1
 29e:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_set_direction>
    /* Replace with your application code */
	
    while (1) 
    {
	  u8 x = DIO_GETpinValue(port_B,1);
 2a2:	61 e0       	ldi	r22, 0x01	; 1
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	0e 94 1a 01 	call	0x234	; 0x234 <DIO_GETpinValue>
	  if (x==HIGH){
 2aa:	81 30       	cpi	r24, 0x01	; 1
 2ac:	31 f4       	brne	.+12     	; 0x2ba <main+0x2c>
		  DIO_set_PinValue(port_A,pin_1,HIGH);
 2ae:	41 e0       	ldi	r20, 0x01	; 1
 2b0:	61 e0       	ldi	r22, 0x01	; 1
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_set_PinValue>
 2b8:	f4 cf       	rjmp	.-24     	; 0x2a2 <main+0x14>
	  }else {
		  DIO_set_PinValue(port_A,pin_1,LOW);
 2ba:	40 e0       	ldi	r20, 0x00	; 0
 2bc:	61 e0       	ldi	r22, 0x01	; 1
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_set_PinValue>
 2c4:	ee cf       	rjmp	.-36     	; 0x2a2 <main+0x14>

000002c6 <_exit>:
 2c6:	f8 94       	cli

000002c8 <__stop_program>:
 2c8:	ff cf       	rjmp	.-2      	; 0x2c8 <__stop_program>
